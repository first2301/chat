services:
  # Ollama 서버
  ollama:
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.ollama
    container_name: rnd_chatbot_ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS=/home/ollama/.ollama
    ports:
      - "11435:11434"
    networks:
      - rag-chatbot-network
    volumes:
      - ./app/ollama_data:/home/ollama/.ollama
    # GPU 전달 및 보안/격리 강화
    # GPU 전체 할당
    # gpus: all
    # 보안 옵션: 새로운 권한 부여 금지
    security_opt:
      - no-new-privileges:true
    # 모든 리눅스 capability 제거
    cap_drop:
      - ALL
    # 컨테이너 파일시스템을 읽기 전용으로 설정
    read_only: true
    # 임시 파일 시스템 마운트
    tmpfs:
      - /tmp
    # 비root 사용자로 실행 (UID:GID = 10001:10001)
    user: "10001:10001"
  qdrant:
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.qdrant
    container_name: rnd_chatbot_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - rag-chatbot-network 
    volumes:
      - ./app/qdrant_data/qdrant_storage:/qdrant/storage
      - ./app/qdrant_data/qdrant_snapshots:/qdrant/snapshots
    environment:
      - QDRANT__TELEMETRY_DISABLED=true
      - QDRANT__SERVICE__ENABLE_TLS=false
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.backend
    container_name: rnd_chatbot_backend
    restart: unless-stopped
    env_file:
      - ./app/backend/.env.dev
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=rag_collection
    volumes:
      - ./app/backend:/app/backend
      - ./app/embedding_models/BGE-m3-ko:/app/embedding_models/BGE-m3-ko
      - ./app/rag_data:/app/data
    networks:
      - rag-chatbot-network
    ports:
      - "8000:8000"
    user: "1000:1000"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    init: true       
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy 
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: ./dockerfile/Dockerfile.frontend
    container_name: rnd_chatbot_frontend
    restart: unless-stopped
    ports:
      - "7861:7860"
    networks:
      - rag-chatbot-network

networks:
  rag-chatbot-network:
    driver: bridge
