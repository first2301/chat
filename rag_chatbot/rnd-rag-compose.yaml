services:
  # Ollama 서버
  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: rnd_ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    ports:
      - "11435:11434"
    networks:
      - rag-network
    volumes:
      - ./app/ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 10

  qdrant:
    build:
      context: .
      dockerfile: Dockerfile.qdrant
    container_name: rnd_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    networks:
      - rag-network
    volumes:
      - ./app/vector_data/qdrant_storage:/qdrant/storage       # 네임드 볼륨 권장
      - ./app/vector_data/snapshot_backup:/qdrant/snapshots
    environment:
      - QDRANT__TELEMETRY_DISABLED=true
      - QDRANT__SERVICE__ENABLE_TLS=false
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/healthz || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    container_name: rnd_rag
    env_file:
      - ./app/backend/.env.dev
    volumes:
      - ./app/backend:/app/backend
      - ./app/embedding_models/BGE-m3-ko:/app/embedding_models/BGE-m3-ko
      - ./rag_data:/app/data
    networks:
      - rag-network
    ports:
      - "8000:8000"
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_started

networks:
  rag-network:
    driver: bridge

volumes:
  qdrant_storage:
    driver: local
  qdrant_snapshots:
    driver: local  
  rag_data:
    driver: local
